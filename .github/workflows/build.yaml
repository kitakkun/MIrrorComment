name: Build Test

on:
  push:
    branches:
      # for the purpose of testing
      - release/0.0.1

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v17
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Extract version
        id: extract_version
        run: |
          version=$(grep 'packageVersion = ' build.gradle.kts | sed -n -e 's/^.*packageVersion = //p' | tr -d '"')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Update aboutlibraries.json
        run: |
          ./gradlew exportLibraryDefinitions -PaboutLibraries.exportPath=src/jvmMain/resources/raw/ -PaboutLibraries.exportVariant=release
          git diff --exit-code || (git commit -am "Update aboutlibraries.json")

      - name: Build with Gradle
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            ./gradlew.bat packageReleaseMsi
            artifact_path="./build/compose/binaries/main-release/msi"
            asset_content_type="application/x-msi"
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            ./gradlew packageReleaseDmg
            artifact_path="./build/compose/binaries/main-release/dmg"
            asset_content_type="application/octet-stream"
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            ./gradlew packageReleaseDeb
            artifact_path="./build/compose/binaries/main-release/deb"
            asset_content_type="application/x-deb"
          fi
          echo "ARTIFACT_PATH=$artifact_path" >> $GITHUB_ENV
          echo "ASSET_CONTENT_TYPE=$asset_content_type" >> $GITHUB_ENV

#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: v${{ env.VERSION }}
#          release_name: Release v${{ env.VERSION }}
#          draft: false
#          prerelease: false
#
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ${{ env.ARTIFACT_PATH }}
#          asset_name: application.${{ matrix.os }}
#          asset_content_type: ${{ env.ASSET_CONTENT_TYPE }}
