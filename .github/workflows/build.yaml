name: Build Test

on:
  push:
    branches:
      - release/1.0.0

jobs:
  extract_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract version
        run: |
          version=$(grep 'packageVersion = ' build.gradle.kts | sed -n -e 's/^.*packageVersion = //p' | tr -d '"')
          echo $version > version.txt

      - name: Upload version
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt

  build:
    needs: extract_version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            gradle_task: packageReleaseDeb
            artifact_name: MirrorComment-ubuntu
            asset_content_type: application/x-deb
            extensions: deb
          - os: windows-latest
            gradle_task: packageReleaseMsi
            artifact_name: MirrorComment-windows
            asset_content_type: application/x-msi
            extensions: msi
          - os: macos-latest
            gradle_task: packageReleaseDmg
            artifact_name: MirrorComment-macos
            asset_content_type: application/octet-stream
            extensions: dmg
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Download version
        uses: actions/download-artifact@v2
        with:
          name: version

      - name: Set version
        id: set_version
        run: |
          version=$(cat version.txt)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Update aboutlibraries.json
        run: |
          ./gradlew exportLibraryDefinitions -PaboutLibraries.exportPath=src/jvmMain/resources/raw/ -PaboutLibraries.exportVariant=release

      - name: Build with Gradle
        run: ./gradlew ${{ matrix.gradle_task }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact_name }}
          path: ./build/compose/binaries/main-release/${{ matrix.extensions }}/MirrorComment-${{ env.VERSION }}.${{ matrix.extensions }}

#  create_release:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download version
#        uses: actions/download-artifact@v2
#        with:
#          name: version
#
#      - name: Set version
#        id: set_version
#        run: |
#          version=$(cat version.txt)
#          echo "VERSION=$version" >> $GITHUB_ENV
#
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: v${{ env.VERSION }}
#          release_name: Release v${{ env.VERSION }}
#          draft: false
#          prerelease: false
#
#      - name: Download artifacts and upload to release
#        run: |
#          for os in ubuntu windows macos
#          do
#            artifact_name="application-$os"
#            wget -q "https://github.com/${{ github.repository }}/actions/artifacts/$artifact_name/zip"
#            unzip $artifact_name.zip
#            asset_path=$(find . -name "*.$os")
#            curl \
#              --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#              --header "Content-Type: application/octet-stream" \
#              --data-binary "@$asset_path" \
#              --request POST \
#              "${{ steps.create_release.outputs.upload_url }}?name=$(basename $asset_path)"
#          done
